@mixin borderradius($radius: $border-radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
}
@mixin borderradius-top-left($radius: $border-radius) {
  border-top-left-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  -moz-border-radius-topleft: $radius;
}
@mixin borderradius-top-right($radius: $border-radius) {
  border-top-right-radius: $radius;
  -webkit-border-top-right-radius: $radius;
  -moz-border-radius-topright: $radius;
}
@mixin borderradius-bottom-left($radius: $border-radius) {
  border-bottom-left-radius: $radius;
  -webkit-border-bottom-left-radius: $radius;
  -moz-border-radius-bottomleft: $radius;
}
@mixin borderradius-bottom-right($radius: $border-radius) {
  border-bottom-right-radius: $radius;
  -webkit-border-bottom-right-radius: $radius;
  -moz-border-radius-bottomright: $radius;
}


@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  -ms-transition: $transition;
  transition: $transition;
}


@mixin boxshadow($definition) {
  box-shadow: $definition;
  -webkit-box-shadow: $definition;
  -moz-box-shadow: $definition;
}


@mixin boxsizing($value) {
  box-sizing: $value;
  -webkit-box-sizing: $value;
  -moz-box-sizing: $value;
  -o-box-sizing: $value;
}


@mixin ul($style: default) {
  list-style: disc;
  padding-left: 2em;
  & li {
    display: list-item;
    margin-bottom: 1em;
  }
  @if $style == plain {
    list-style: none;
    padding-left: 0;
    margin: 0;
  }
  @if $style == inline {
    padding-left: 0;
    margin: 0;
    & li {
      display: inline;
    }
  }
}

@mixin clearfix() {
  zoom: 1;
  &:before, &:after {
    content: "\0020";
    display: block;
    height: 0;
    visibility: hidden;
  }
  &:after { clear: both; }
}
